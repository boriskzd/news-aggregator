import type { Metadata } from 'next';
import { Geist, Geist_Mono } from 'next/font/google';
import './globals.css';
// MUI
import CssBaseline from '@mui/material/CssBaseline';
import { AppRouterCacheProvider } from '@mui/material-nextjs/v15-appRouter';
import { Roboto } from 'next/font/google';
import { ThemeProvider } from '@mui/material/styles';
import theme from '../theme';

const roboto = Roboto({
	weight: ['300', '400', '500', '700'],
	subsets: ['latin'],
	display: 'swap',
	variable: '--font-roboto',
});

const geistSans = Geist({
	variable: '--font-geist-sans',
	subsets: ['latin'],
});

const geistMono = Geist_Mono({
	variable: '--font-geist-mono',
	subsets: ['latin'],
});

export const metadata: Metadata = {
	title: 'ðŸ”ºNews AggregatorðŸ”º',
	description: 'Generated by create next app',
};

export default function RootLayout({
	children,
}: Readonly<{
	children: React.ReactNode;
}>) {
	return (
		<>
			{/* CSS reset for entire app, so it appears same on all browsers and devices --> https://mui.com/material-ui/react-css-baseline/*/}
			<CssBaseline />
			<html lang='en'>
				{/* <body className={`${geistSans.variable} ${geistMono.variable}`}> */}
				<body className={roboto.variable}>
					{/* The AppRouterCacheProvider component is responsible for collecting the CSS generated by MUI System on the server,
					as Next.js is streaming chunks of the .html page to the client. While it's not required to use the AppRouterCacheProvider
					component, it's recommended to use it to ensure that the styles are appended to the <head> and not rendering in the <body>.
					--> https://mui.com/material-ui/integrations/nextjs/ */}
					<AppRouterCacheProvider>
						<ThemeProvider theme={theme}>{children}</ThemeProvider>
					</AppRouterCacheProvider>
				</body>
			</html>
		</>
	);
}
